{
  "_args": [
    [
      {
        "name": "morse-node",
        "raw": "morse-node",
        "rawSpec": "",
        "scope": null,
        "spec": "latest",
        "type": "tag"
      },
      "/home/pi/workspace/rpi_node"
    ]
  ],
  "_from": "morse-node@latest",
  "_id": "morse-node@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/morse-node",
  "_npmUser": {
    "email": "calvin@calvindn.com",
    "name": "calvindn"
  },
  "_npmVersion": "1.2.17",
  "_phantomChildren": {},
  "_requested": {
    "name": "morse-node",
    "raw": "morse-node",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/morse-node/-/morse-node-0.1.1.tgz",
  "_shasum": "2530eba6fce18457948552135d5baf752fbdc325",
  "_shrinkwrap": null,
  "_spec": "morse-node",
  "_where": "/home/pi/workspace/rpi_node",
  "author": {
    "email": "calvin@calvindn.com",
    "name": "Calvin Nichols",
    "url": "http://calvindn.com"
  },
  "bugs": {
    "url": "https://github.com/calvindn/morse-node/issues"
  },
  "dependencies": {},
  "description": "Encode strings to Morse code, decode strings from Morse code.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "2530eba6fce18457948552135d5baf752fbdc325",
    "tarball": "https://registry.npmjs.org/morse-node/-/morse-node-0.1.1.tgz"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "homepage": "https://github.com/calvindn/morse-node#readme",
  "keywords": [
    "morse",
    "code",
    "encode",
    "decode"
  ],
  "license": "BSD",
  "main": "./morse-node.js",
  "maintainers": [
    {
      "email": "calvin@calvindn.com",
      "name": "calvindn"
    }
  ],
  "name": "morse-node",
  "optionalDependencies": {},
  "readme": "Morse Node\n==========\n\nA very tiny, dependency-free Morse code encoder and decoder.\nCurrently supports the [ITU standard](https://en.wikipedia.org/wiki/Morse_code#International_Morse_Code).\n\nInstall\n-------\n\n```javascript\nnpm install morse-node\n```\n\nGetting Started\n---------------\n\n### Setup API\n```javascript\n var morse = require('morse-node').create(\"ITU\");\n```\n\n### Encoding\n\n - All alphanumeric characters are accepted, available symbols includes everything inside the brackets [ **. , ? ' ! / ( ) & : ; = + - _ \" $ @** ].\n\n```javascript\nvar msg = morse.encode('The quick brown fox jumped over the lazy dog.');\n```\n\n### Decoding\n\n - Letters are seperated by a single space.\n - Words are seperated by a forward slash \" **/** \".\n\n```javascript\nvar msg = morse.decode(\"- .... ./--.- ..- .. -.-. -.-/-... .-. --- .-- -./..-. --- -..-/.--- ..- -- .--. . -../--- ...- . .-./- .... ./.-.. .- --.. -.--/-.. --- --. .-.-.-\");\n```\n\n### isValid\n\n - Check validity of a string by using the isValid function.\n - Encoding and decoding functions do not make this check and will attempt to translate your string regardless of undefined characters.\n\nExample\n-------\n\n### example.js\n\n```javascript\nvar morse = require('morse-node').create();\n\nvar encoded = morse.encode('Pack my box with five dozen liquor jugs!');\nconsole.log(encoded);\n\nvar decoded = morse.decode(encoded);\nconsole.log(decoded);\n\nconsole.log(morse.isValid(encoded, \"morse\"));\nconsole.log(morse.isValid(encoded += \"asdf\", \"morse\"));\nconsole.log(morse.isValid(decoded, \"chars\"));\nconsole.log(morse.isValid(decoded += \"~\", \"chars\"));\n```\n\n### Output\n\n```\n.--. .- -.-. -.- / -- -.-- / -... --- -..- / .-- .. - .... / ..-. .. ...- . / -.. --- --.. . -. / .-.. .. --.- ..- --- .-. / .--- ..- --. ... -.-.--\npack my box with five dozen liquor jugs!\ntrue\nfalse\ntrue\nfalse\n```\n\nAuthor\n------\n[Calvin Nichols](https://github.com/calvindn)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/calvindn/morse-node.git"
  },
  "version": "0.1.1"
}
